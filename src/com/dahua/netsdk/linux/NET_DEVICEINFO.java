package com.dahua.netsdk.linux;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NET_DEVICEINFO extends Structure {
	/** \u5e8f\u5217\u53f7 */
	public byte[] sSerialNumber = new byte[48];
	/** DVR\u62a5\u8b66\u8f93\u5165\u4e2a\u6570 */
	public byte byAlarmInPortNum;
	/** DVR\u62a5\u8b66\u8f93\u51fa\u4e2a\u6570 */
	public byte byAlarmOutPortNum;
	/** DVR\u786c\u76d8\u4e2a\u6570 */
	public byte byDiskNum;
	/** DVR\u7c7b\u578b, \u89c1\u679a\u4e3eDHDEV_DEVICE_TYPE */
	public byte byDVRType;
	/** DVR\u901a\u9053\u4e2a\u6570 */
	public byte byChanNum;
	public NET_DEVICEINFO() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("sSerialNumber", "byAlarmInPortNum", "byAlarmOutPortNum", "byDiskNum", "byDVRType", "byChanNum");
	}
	public NET_DEVICEINFO(byte sSerialNumber[], byte byAlarmInPortNum, byte byAlarmOutPortNum, byte byDiskNum, byte byDVRType, byte byChanNum) {
		super();
		if ((sSerialNumber.length != this.sSerialNumber.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.sSerialNumber = sSerialNumber;
		this.byAlarmInPortNum = byAlarmInPortNum;
		this.byAlarmOutPortNum = byAlarmOutPortNum;
		this.byDiskNum = byDiskNum;
		this.byDVRType = byDVRType;
		this.byChanNum = byChanNum;
	}
	public static class ByReference extends NET_DEVICEINFO implements Structure.ByReference {
		
	};
	public static class ByValue extends NET_DEVICEINFO implements Structure.ByValue {
		
	};
}
